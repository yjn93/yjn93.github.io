<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trick on 木秀于南</title>
    <link>http://yjn93.github.io/tags/trick/</link>
    <description>Recent content in Trick on 木秀于南</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© 2016 Jianan Yue. All right reserved.</copyright>
    <lastBuildDate>Thu, 22 Dec 2016 13:15:37 -0500</lastBuildDate>
    <atom:link href="http://yjn93.github.io/tags/trick/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>RotateMatrix</title>
      <link>http://yjn93.github.io/dev/RotateMatrix/</link>
      <pubDate>Thu, 22 Dec 2016 13:15:37 -0500</pubDate>
      
      <guid>http://yjn93.github.io/dev/RotateMatrix/</guid>
      <description>

&lt;h1 id=&#34;rotate-image:18934d05988ea6297312db56d76fae0e&#34;&gt;Rotate Image&lt;/h1&gt;

&lt;p&gt;You are given an n x n 2D matrix representing an image.&lt;/p&gt;

&lt;p&gt;Rotate the image by 90 degrees (clockwise).&lt;/p&gt;

&lt;h2 id=&#34;trick:18934d05988ea6297312db56d76fae0e&#34;&gt;Trick&lt;/h2&gt;

&lt;p&gt;I did the rotation in a dummy way. There is a trick:&lt;/p&gt;

&lt;p&gt;The idea was firstly transpose the matrix and then flip it symmetrically.&lt;/p&gt;

&lt;h2 id=&#34;sample:18934d05988ea6297312db56d76fae0e&#34;&gt;Sample&lt;/h2&gt;

&lt;p&gt;Transpose: swap(matrix[i][j], matrix[j][i])&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1  2  3             
4  5  6
7  8  9
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then flip the matrix horizontally. (swap(matrix[i][j], matrix[i][matrix.length-1-j])&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;7  4  1
8  5  2
9  6  3

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;solution:18934d05988ea6297312db56d76fae0e&#34;&gt;Solution&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;    public void rotate(int[][] matrix) {
        if(matrix == null || matrix.length == 0 || matrix[0].length == 0)
            return;
        int len = matrix.length;
        for(int i = 0; i &amp;lt; len; i ++) {
            for(int j = i + 1; j &amp;lt; len; j ++) {
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
        for(int i = 0; i &amp;lt; len; i ++) {
            for(int j = 0; j &amp;lt; len/2; j ++) {
                int temp = matrix[i][j];
                matrix[i][j] = matrix[i][len - j - 1];
                matrix[i][len - j - 1] = temp;
            }
        }
    }
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>